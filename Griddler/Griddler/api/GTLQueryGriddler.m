/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2013 Google Inc.
 */

//
//  GTLQueryGriddler.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   griddler/v1
// Description:
//   Griddler API
// Classes:
//   GTLQueryGriddler (15 custom class methods, 10 custom properties)

#import "GTLQueryGriddler.h"

#import "GTLGriddlerGame.h"
#import "GTLGriddlerGamePlayStatus.h"
#import "GTLGriddlerInvitation.h"
#import "GTLGriddlerPlayer.h"
#import "GTLGriddlerPlayerCollection.h"

@implementation GTLQueryGriddler

@dynamic boardLevel, deviceId, deviceType, fields, gameId, googlePlusId,
         identifier, invitationId, inviteeGooglePlusId, inviteeId;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObject:@"id"
                                forKey:@"identifier"];
  return map;
}

#pragma mark -
#pragma mark "gameEndpoint" methods
// These create a GTLQueryGriddler object.

+ (id)queryForGameEndpointAcceptInvitationWithGameId:(long long)gameId
                                        invitationId:(long long)invitationId {
  NSString *methodName = @"griddler.gameEndpoint.acceptInvitation";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.gameId = gameId;
  query.invitationId = invitationId;
  return query;
}

+ (id)queryForGameEndpointCancelInvitationWithGameId:(long long)gameId
                                        invitationId:(long long)invitationId {
  NSString *methodName = @"griddler.gameEndpoint.cancelInvitation";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.gameId = gameId;
  query.invitationId = invitationId;
  return query;
}

+ (id)queryForGameEndpointDeclineInvitationWithGameId:(long long)gameId
                                         invitationId:(long long)invitationId {
  NSString *methodName = @"griddler.gameEndpoint.declineInvitation";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.gameId = gameId;
  query.invitationId = invitationId;
  return query;
}

+ (id)queryForGameEndpointGetGameWithIdentifier:(long long)identifier {
  NSString *methodName = @"griddler.gameEndpoint.getGame";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLGriddlerGame class];
  return query;
}

+ (id)queryForGameEndpointGetInvitationStatusWithGameId:(long long)gameId
                                           invitationId:(long long)invitationId {
  NSString *methodName = @"griddler.gameEndpoint.getInvitationStatus";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.gameId = gameId;
  query.invitationId = invitationId;
  query.expectedObjectClass = [GTLGriddlerInvitation class];
  return query;
}

+ (id)queryForGameEndpointStartMultiplayerGameWithBoardLevel:(NSInteger)boardLevel
                                                   inviteeId:(long long)inviteeId {
  NSString *methodName = @"griddler.gameEndpoint.startMultiplayerGame";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.boardLevel = boardLevel;
  query.inviteeId = inviteeId;
  query.expectedObjectClass = [GTLGriddlerInvitation class];
  return query;
}

+ (id)queryForGameEndpointStartMultiplayerGameByGooglePlusIdWithBoardLevel:(NSInteger)boardLevel
                                                       inviteeGooglePlusId:(NSString *)inviteeGooglePlusId {
  NSString *methodName = @"griddler.gameEndpoint.startMultiplayerGameByGooglePlusId";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.boardLevel = boardLevel;
  query.inviteeGooglePlusId = inviteeGooglePlusId;
  query.expectedObjectClass = [GTLGriddlerInvitation class];
  return query;
}

+ (id)queryForGameEndpointStartSinglePlayerGameWithBoardLevel:(NSInteger)boardLevel {
  NSString *methodName = @"griddler.gameEndpoint.startSinglePlayerGame";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.boardLevel = boardLevel;
  query.expectedObjectClass = [GTLGriddlerGame class];
  return query;
}

+ (id)queryForGameEndpointSubmitAnswersWithObject:(GTLGriddlerGamePlayStatus *)object
                                       identifier:(long long)identifier {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"griddler.gameEndpoint.submitAnswers";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.identifier = identifier;
  return query;
}

#pragma mark -
#pragma mark "playerEndpoint" methods
// These create a GTLQueryGriddler object.

+ (id)queryForPlayerEndpointAssignPlayerPlusIdWithGooglePlusId:(NSString *)googlePlusId {
  NSString *methodName = @"griddler.playerEndpoint.assignPlayerPlusId";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.googlePlusId = googlePlusId;
  return query;
}

+ (id)queryForPlayerEndpointGet {
  NSString *methodName = @"griddler.playerEndpoint.get";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGriddlerPlayer class];
  return query;
}

+ (id)queryForPlayerEndpointInsertWithGooglePlusId:(NSString *)googlePlusId {
  NSString *methodName = @"griddler.playerEndpoint.insert";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.googlePlusId = googlePlusId;
  query.expectedObjectClass = [GTLGriddlerPlayer class];
  return query;
}

+ (id)queryForPlayerEndpointList {
  NSString *methodName = @"griddler.playerEndpoint.list";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGriddlerPlayerCollection class];
  return query;
}

+ (id)queryForPlayerEndpointRegisterDeviceWithDeviceId:(NSString *)deviceId
                                            deviceType:(NSInteger)deviceType {
  NSString *methodName = @"griddler.playerEndpoint.registerDevice";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.deviceId = deviceId;
  query.deviceType = deviceType;
  return query;
}

+ (id)queryForPlayerEndpointUnRegisterDeviceWithDeviceId:(NSString *)deviceId {
  NSString *methodName = @"griddler.playerEndpoint.unRegisterDevice";
  GTLQueryGriddler *query = [self queryWithMethodName:methodName];
  query.deviceId = deviceId;
  return query;
}

@end
